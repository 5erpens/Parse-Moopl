/* Generated By:JavaCC: Do not edit this line. MooplParserConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface MooplParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 8;
  /** RegularExpression Id. */
  int LPAREN = 9;
  /** RegularExpression Id. */
  int RPAREN = 10;
  /** RegularExpression Id. */
  int NEW = 11;
  /** RegularExpression Id. */
  int OBJECT = 12;
  /** RegularExpression Id. */
  int SELF = 13;
  /** RegularExpression Id. */
  int PROC = 14;
  /** RegularExpression Id. */
  int FUN = 15;
  /** RegularExpression Id. */
  int ARRAYOF = 16;
  /** RegularExpression Id. */
  int INT = 17;
  /** RegularExpression Id. */
  int TRUE = 18;
  /** RegularExpression Id. */
  int FALSE = 19;
  /** RegularExpression Id. */
  int NOT = 20;
  /** RegularExpression Id. */
  int ISNULL = 21;
  /** RegularExpression Id. */
  int LSQBR = 22;
  /** RegularExpression Id. */
  int RSQBR = 23;
  /** RegularExpression Id. */
  int LBRACE = 24;
  /** RegularExpression Id. */
  int RBRACE = 25;
  /** RegularExpression Id. */
  int SEMICOLON = 26;
  /** RegularExpression Id. */
  int DOT = 27;
  /** RegularExpression Id. */
  int ASSIGN = 28;
  /** RegularExpression Id. */
  int AND = 29;
  /** RegularExpression Id. */
  int LT = 30;
  /** RegularExpression Id. */
  int EQUALS = 31;
  /** RegularExpression Id. */
  int DIV = 32;
  /** RegularExpression Id. */
  int PLUS = 33;
  /** RegularExpression Id. */
  int MINUS = 34;
  /** RegularExpression Id. */
  int MULT = 35;
  /** RegularExpression Id. */
  int COMMA = 36;
  /** RegularExpression Id. */
  int BOOLEAN = 37;
  /** RegularExpression Id. */
  int CLASS = 38;
  /** RegularExpression Id. */
  int ELSE = 39;
  /** RegularExpression Id. */
  int THEN = 40;
  /** RegularExpression Id. */
  int EXTENDS = 41;
  /** RegularExpression Id. */
  int IF = 42;
  /** RegularExpression Id. */
  int WHILE = 43;
  /** RegularExpression Id. */
  int DO = 44;
  /** RegularExpression Id. */
  int OUTPUT = 45;
  /** RegularExpression Id. */
  int LENGTH = 46;
  /** RegularExpression Id. */
  int RETURN = 47;
  /** RegularExpression Id. */
  int ID = 48;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "<token of kind 6>",
    "<token of kind 7>",
    "<INTEGER_LITERAL>",
    "\"(\"",
    "\")\"",
    "\"new\"",
    "\"object\"",
    "\"self\"",
    "\"proc\"",
    "\"fun\"",
    "\"arrayof\"",
    "\"int\"",
    "\"true\"",
    "\"false\"",
    "\"!\"",
    "\"isnull\"",
    "\"[\"",
    "\"]\"",
    "\"{\"",
    "\"}\"",
    "\";\"",
    "\".\"",
    "\"=\"",
    "\"and\"",
    "\"<\"",
    "\"==\"",
    "\"div\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\",\"",
    "\"boolean\"",
    "\"class\"",
    "\"else\"",
    "\"then\"",
    "\"extends\"",
    "\"if\"",
    "\"while\"",
    "\"do\"",
    "\"output\"",
    "\"length\"",
    "\"return\"",
    "<ID>",
    "\":call\"",
    "\":eval\"",
    "\":quit\"",
  };

}
